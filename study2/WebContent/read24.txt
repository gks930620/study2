# read24.txt

--과제
OOP에서 SOLID 원칙을
 - 5계층
 - SOLID 원칙
 	: 객체지향 설계에서 지켜줘야 할 5개의 원칙( SRP, OCP, LSP, DIP, ISP )		// 무슨 약자인지 확인
 		1. SRP(Single Responsibility Principle), 단일 책임 원칙
			객체는 단 하나의 책임만 가져야 한다는 원칙
		2. OCP (Open-Closed Principle), 개방-폐쇄 원칙
			기존의 코드를 변경하지 않으면서(closed), 기능을 추가할 수 있도록(open) 
			설계가 되어야 한다는 원칙
		3. LSP (Liskov Substitution Principle), 리스코프 치환 원칙
			자식 클래스는 최소한 자신의 부모 클래스에서 가능한 행위는 수행할 수 있어야 한다는 설계 원칙
		4. ISP (Interface Segregation Principle), 인터페이스 분리 원칙
			자신이 사용하지 않는 인터페이스는 구현하지 말아야 한다는 설계 원칙
		5. DIP (Dependency Inversion Principle), 의존 관계 역전 원칙
			객체들이 서로 정보를 주고 받을 때 의존 관계가 형성되는데, 
			이 때 객체들은 나름대로의 원칙을 갖고 정보를 주고 받아야 한다는 설계 원칙
		
		
		
		